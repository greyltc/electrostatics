load "gmsh"
mesh Th = gmshload("square.msh22");

plot(Th, wait= true,ps="square.eps");

fespace Vh(Th,P1);

Vh u,v;
real Vhi = 1.0; // voltage at hi terminal

// physical entity numbers
int LO=1; // gnd side
int HI=2; // 1v side
int MID=3; // mid way line
int FACE=8; // square surface

NewMacro grad(u) [dx(u), dy(u)] EndMacro // 2d case
//NewMacro grad(u) [dx(u), dy(u), dz(u)] EndMacro // 3d case

problem Laplace(u,v,solver=LU) =
	int2d(Th)( grad(u)'*grad(v) )
	+ on(HI,u=Vhi)
	+ on(LO,u=0);

Laplace;

Vh Ex, Ey, Ez;
//Vh Ex, Ey, Jx, Jy;

Ex = -dx(u);
Ey = -dy(u);

plot(u,[Ex,Ey],wait=true,ps="solution.eps");

// electric field
//macro E(u) (-N.x*dx(u)-N.y*dy(u))// EOM
//E = 

real R; // resistance
real I; // current flux through center line
real P; // total power loss
real Rs=10.0; // sheet resistance, in ohm/sq
real sigma=1/Rs; // conductivity

I = int1d(Th, MID) (sigma*(N.x*Ex+N.y*Ey));
R = Vhi / I;
//P = int2d((th,FACE) ()
P = I^2*R;

cout << "I = " << I << " A" << endl;
cout << "R = " << R << " Ohm" << endl;
cout << "P = " << P << " W" << endl;
